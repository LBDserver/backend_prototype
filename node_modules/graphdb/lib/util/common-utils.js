"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Common utility functions.
 *
 * @class
 * @author Mihail Radkov
 */
var CommonUtils =
/*#__PURE__*/
function () {
  function CommonUtils() {
    _classCallCheck(this, CommonUtils);
  }

  _createClass(CommonUtils, null, [{
    key: "hasNullArguments",

    /**
     * Checks if at least one of the supplied arguments is undefined or null.
     *
     * @return {boolean} <code>true</code> if there is null argument or
     *         <code>false</code> otherwise
     */
    value: function hasNullArguments() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return [].concat(args).some(function (arg) {
        return !arg;
      });
    }
  }]);

  return CommonUtils;
}();

module.exports = CommonUtils;